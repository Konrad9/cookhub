from django.test import TestCase
from django.test import Client
from cookhub.forms import *
from cookhub.models import *

class SetUpClass(TestCase):
    def setUp(self):
        self.user = User.objects.create(username='username', email='bob@gmail.com', first_name='Bob', last_name='Bobbington', password='g00gl315b4d', confirm_password='g00gl315b4d')
        self.userProfile = UserModel.objects.create(user=self.user)
        self.recipe = Recipe.objects.create(title='Meatballs', description='Make a whole bunch of meatballs', time=10, servings=1, user=self.user)


class UserFormTestCase(TestCase):
    def test_UserForm_valid(self):
        form = UserForm(data={'username':'username', 'email':'bob@gmail.com', 'first_name':'Bob', 'last_name':'Bobbington', 'password':'g00gl315b4d', 'confirm_password':'g00gl315b4d'})
        self.assertTrue(form.is_valid())
    
    def test_UserForm_invalid(self):
        form = UserForm(data={'username':'', 'email':'', 'first_name':'', 'last_name':'', 'password':'np', 'confirm_password':'np'})
        self.assertFalse(form.is_valid())
    
    def test_UserForm_invalid_passwords_dont_match(self):
        form = UserForm(data={'username':'username', 'email':'bob@gmail.com', 'first_name':'Bob', 'last_name':'Bobbington', 'password':'g00gl315b4d', 'confirm_password':'g00gl315bad'})
        self.assertFalse(form.is_valid())
    
    def test_UserForm_invalid_last_name(self):
        form = UserForm(data={'username':'username', 'email':'bob@gmail.com', 'first_name':'Bob', 'last_name':'', 'password':'g00dl315b4d', 'confirm_password':'g00gl3b4d'})
        self.assertFalse(form.is_valid())
    
    def test_UserForm_invalid_username(self):
        form = UserForm(data={'username':'', 'email':'bob@gmail.com', 'first_name':'Bob', 'last_name':'Bobbington', 'password':'g00gl315b4d', 'confirm_password':'g00gl315b4d'})
        self.assertFalse(form.is_valid())
    
    def test_UserForm_invalid_password(self):
        form = UserForm(data={'username':'username', 'email':'bob@gmail.com', 'first_name':'', 'last_name':'Bobbington', 'password':'', 'confirm_password':''})
        self.assertFalse(form.is_valid())
    

class UserProfileFormTestCase(TestCase):
    def test_UserProfileForm_valid(self):
        form = UserProfileForm(data={'user':User.objects.get_or_create(username='username')[0]})
        self.assertTrue(form.is_valid())
    
    '''def test_UserProfileForm_invalid(self):
        form = UserProfileForm(data={'user':'a'})
        self.assertFalse(form.is_valid())'''


class ChangePasswordFormTestCase(TestCase):
    def test_ChangePasswordForm_valid(self):
        form = ChangePasswordForm(data={'password':'m4nyp4ssw0rd5', 'confirm_password':'m4nyp4ssw0rd5'})
        self.assertTrue(form.is_valid())
    
    def test_ChangePasswordForm_invalid(self):
        form = ChangePasswordForm(data={'password':'', 'confirm_password':''})
        self.assertFalse(form.is_valid())
    
    def test_ChangePasswordForm_invalid_password_mismatch(self):
        form = ChangePasswordForm(data={'password':'m4nyp4srd5', 'confirm_password':'m4nyp4ssw0rd5'})
        self.assertFalse(form.is_valid())


class RecipeFormTestCase(TestCase):
    def test_RecipeForm_valid(self):
        form = RecipeForm(data={'title':'Meatballs', 'description':'Make a bunch of meatballs', 'time':20, 'servings':1})
        self.assertTrue(form.is_valid())
    
    def test_RecipeForm_invalid_title_too_short(self):
        form = RecipeForm(data={'title':'', 'description':'Make a bunch of meatballs', 'time':20, 'servings':1})
        self.assertFalse(form.is_valid())
    
    def test_RecipeForm_invalid_title_too_long(self):
        form = RecipeForm(data={'title':'MeatballsMeatballsMeatballsMeatballsMeatballsMeatballs', 'description':'Make a bunch of meatballs', 'time':20, 'servings':1})
        self.assertFalse(form.is_valid())
    
    def test_RecipeForm_invalid_description_too_short(self):
        form = RecipeForm(data={'title':'Meatballs', 'description':'', 'time':20, 'servings':1})
        self.assertFalse(form.is_valid())
    
    def test_RecipeForm_invalid_description_too_long(self):
        form = RecipeForm(data={'title':'Meatballs', 'descriptiontime':20, 'servings':1})
        self.assertFalse(form.is_valid())
    
    def test_RecipeForm_invalid_time(self):
        form = RecipeForm(data={'title':'Meatballs', 'description':'Make a bunch of meatballs', 'time':0, 'servings':1})
        self.assertFalse(form.is_valid())
    
    def test_RecipeForm_invalid_servings(self):
        form = RecipeForm(data={'title':'Meatballs', 'description':'Make a bunch of meatballs', 'time':20, 'servings':0})
        self.assertFalse(form.is_valid())
    

class CommentFormTestCase(TestCase):
    def test_CommentForm_valid(self):
        form = CommentForm(data={'text':'Meatballs are cool'})
        self.assertTrue(form.is_valid())
    
    def test_CommentForm_invalid_text_too_short(self):
        form = CommentForm(data={'text':''})
        self.assertFalse(form.is_valid())
    
    def test_CommentForm_invalid_text_too_long(self):
        form=CommentForm(data={'text})
        self.assertFalse(form.is_valid())


class RatingFormTestCase(TestCase):
    def test_RatingForm_valid(self):
        form = RatingForm(data={'rating':3})
        self.assertTrue(form.is_valid())
    
    def test_RatingForm_invalid_rating_too_low(self):
        form = RatingForm(data={'rating':0})
        self.assertFalse(form.is_valid())
    
    def test_RatingForm_invalid_rating_too_high(self):
        form = RatingForm(data={'rating':6})
        self.assertFalse(form.is_valid())


class CategoryFormTestCase(TestCase):
    def test_CategoryForm_valid(self):
        form = CategoryForm(data={'name':'Meatballs'})
        self.assertTrue(form.is_valid())
    
    def test_CategoryForm_invalid_name_too_short(self):
        form = CategoryForm(data={'name':''})
        self.assertFalse(form.is_valid())
    
    def test_CategoryForm_invalid_name_too_long(self):
        form = CategoryForm(data={'name':'AAAAAAAAAAAAAAAAAAAAA'})
        self.assertFalse(form.is_valid())

class IngredientFormTestCase(TestCase):
    def test_IngredientForm_valid(self):
        form = IngredientForm(data={'name':'Meatball', 'quantity':100})
        self.assertTrue(form.is_valid())
    
    def test_IngredientForm_invalid_name_too_short(self):
        form = IngredientForm(data={'name':'', 'quantity':100})
        self.assertFalse(form.is_valid())
    
    def test_IngredientForm_invalid_name_too_long(self):
        form = IngredientForm(data={'name':'AAAAAAAAAAAAAAAAAAAAA', 'quantity':100})
        self.assertFalse(form.is_valid())
    
    def test_IngredientForm_invalid_quantity_too_small(self):
        form = IngredientForm(data={'name':'Meatball', 'quantity':0})
        self.assertFalse(form.is_valid())
    
    def test_IngredientForm_invalid_unit_too_long(self):
        form = IngredientForm(data={'name':'Meatball', 'quantity':100, 'unit':'AAAAAAAAAAAAAAAAAAAAA'})
        self.assertFalse(form.is_valid())